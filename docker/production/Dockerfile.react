ARG NODE_VERSION=20.15.0

# Base stage for setup
FROM node:${NODE_VERSION}-slim AS base

WORKDIR /workspace
# enable corepack for pnpm
RUN corepack enable


# Fetcher stage to optimize dependency caching
FROM base AS fetcher

# Copy pnpm workspace files
COPY pnpm*.yaml ./
# mount pnpm store as cache & fetch dependencies
RUN --mount=type=cache,id=pnpm-store,target=/root/.local/share/pnpm-store \
  pnpm fetch --ignore-scripts


# Builder stage to Build the project
FROM fetcher AS builder

# specify the app in apps/ we want to build
ARG APP_NAME
ENV APP_NAME=${APP_NAME}
WORKDIR /workspace
COPY . .

# Install dependencies
RUN pnpm install --frozen-lockfile
# Build only the specific app
RUN pnpm turbo run build --filter="${APP_NAME}"


# Final image using nginx for serving static files
FROM nginx:alpine AS runner

ARG PORT=80
ARG APP_DIR
ENV PORT=${PORT}
ENV NODE_ENV=production

# Remove default nginx static files
RUN rm -rf /usr/share/nginx/html/*

# Copy built files from builder stage
COPY --from=builder /workspace/apps/${APP_DIR}/dist /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx/nginx.conf /etc/nginx/conf.d/default.conf

# Expose port
EXPOSE ${PORT}

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
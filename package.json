{
  "name": "@ecohatch",
  "author": "Umair Saleem",
  "version": "1.0.0",
  "private": true,
  "license": "MIT",
  "description": "EcoHatch is a feature-rich, scalable, and modern multivendor e-commerce application built with React.js and Node.js. It leverages a microservices architecture for modularity, high availability, and efficient performance. EcoHatch supports multiple client platforms, including web and mobile, and includes robust features such as user management, catalog management, order processing, payment integration (Stripe and PayPal), real-time notifications, and more. The application uses Redis for caching, Kafka for event-driven communication, and employs best practices for security, optimization, and responsiveness.",
  "keywords": [
    "react",
    "node",
    "microservices",
    "ecommerce",
    "multivendor",
    "kafka",
    "redis",
    "stripe",
    "paypal",
    "nextjs",
    "typescript",
    "mongodb",
    "postgresql",
    "docker",
    "kubernetes"
  ],
  "scripts": {
    "preinstall": "npx --yes only-allow pnpm",
    "build": "turbo build --concurrency=20",
    "dev": "turbo dev",
    "start": "turbo start",
    "typecheck": "turbo typecheck",
    "lint": "turbo lint",
    "lint:fix": "turbo lint:fix",
    "format:check": "turbo format:check && prettier . --check",
    "format:fix": "turbo format:fix && prettier . --write",
    "clean": "turbo clean",
    "list:packages": "syncpack list",
    "list:mismatches": "syncpack list-mismatches",
    "fix:mismatches": "syncpack fix-mismatches && pnpm install",
    "lint:packages:semver": "syncpack lint-semver-ranges",
    "test": "turbo test",
    "test:watch": "turbo test:watch",
    "test:band": "turbo test:band",
    "test:watchBand": "turbo test:watchBand",
    "test:ci": "turbo test:ci",
    "test:e2e": "turbo test:e2e",
    "test:e2e:watch": "turbo test:e2e:watch",
    "test:e2e:band": "turbo test:e2e:band",
    "test:e2e:watchBand": "turbo test:e2e:watchBand",
    "test:e2e:ci": "turbo test:e2e:ci",
    "test:cov": "turbo test:cov",
    "test:ui": "turbo test:ui",
    "test:cy": "turbo test:cy",
    "db:client:generate:dev": "turbo db:client:generate:dev",
    "db:client:generate:prod": "turbo db:client:generate:prod",
    "db:migrate:generate": "turbo db:migrate:generate",
    "db:migrate:run:dev": "turbo db:migrate:run:dev",
    "db:migrate:run:prod": "turbo db:migrate:run:prod",
    "db:migrate:revert:dev": "turbo db:migrate:revert:dev",
    "db:migrate:revert:prod": "turbo db:migrate:revert:prod",
    "db:reset:dev": "turbo db:reset:dev",
    "db:reset:test": "turbo db:reset:test",
    "db:check:dev": "turbo db:check:dev",
    "db:check:prod": "turbo db:check:prod",
    "db:seed:dev": "turbo db:seed:dev",
    "db:seed:prod": "turbo db:seed:prod",
    "rsa:keys:create": "turbo rsa:keys:create",
    "rsa:keys:convert": "turbo rsa:keys:convert",
    "add:changeset": "changeset add",
    "version:packages": "changeset version",
    "prerelease": "pnpm run build",
    "release": "changeset publish",
    "docker:infra:up": "docker-compose -f docker-compose.infra.yaml up",
    "docker:infra:down": "docker-compose -f docker-compose.infra.yaml down",
    "docker:local:up": "docker-compose -f docker-compose.local.yaml -f docker-compose.infra.yaml up",
    "docker:local:down": "docker-compose -f docker-compose.local.yaml -f docker-compose.infra.yaml down",
    "docker:remote:up": "docker-compose -f docker-compose.remote.yaml -f docker-compose.infra.yaml up",
    "docker:remote:down": "docker-compose -f docker-compose.remote.yaml -f docker-compose.infra.yaml down",
    "prepare": "husky"
  },
  "devDependencies": {
    "@changesets/cli": "^2.27.7",
    "@commitlint/cli": "^19.3.0",
    "@commitlint/config-conventional": "^19.2.2",
    "@ecohatch/config-prettier": "workspace:*",
    "husky": "^9.0.11",
    "lint-staged": "^15.2.7",
    "prettier": "^3.3.0",
    "syncpack": "^12.3.2",
    "turbo": "^2.0.7"
  },
  "packageManager": "pnpm@9.5.0",
  "engines": {
    "node": "20.15.0"
  }
}
